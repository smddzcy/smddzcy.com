{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","routes/posts/2019-05-07-how-to-engrave-3d-models-in-realtime-using-threejs/document.mdx","routes/posts/2019-05-07-how-to-engrave-3d-models-in-realtime-using-threejs/bag.png","routes/posts/2019-05-07-how-to-engrave-3d-models-in-realtime-using-threejs/3d-test.png"],"names":["_classCallCheck","instance","Constructor","TypeError","__webpack_require__","d","__webpack_exports__","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_typeof2","obj","Symbol","iterator","constructor","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_setPrototypeOf","p","_inherits","subClass","superClass","create","value","readingTime","text","minutes","time","words","MDXContent","_this","_Users_samedduzcay_Desktop_blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_samedduzcay_Desktop_blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samedduzcay_Desktop_blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","layout","_this$props","components","_Users_samedduzcay_Desktop_blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_7__","name","parentName","href","id","src","bag","alt","style","marginBottom","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","test3D","React","Component","tableOfContents","arguments","undefined","level","title","children","frontMatter","module","exports"],"mappings":"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","file":"static/js/25.d9f3cb73.chunk.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","\nimport React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\nexport const readingTime = {\"text\":\"5 min read\",\"minutes\":4.445,\"time\":266700.00000000006,\"words\":889}\nimport bag from './bag.png'\nimport test3D from './3d-test.png'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<div>\n<MDXTag name=\"p\" components={components}>{`3D modeling is hard, but 3D modeling in Javascript is even `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`harder`}</MDXTag>{`. Javascript is easy and effective for many problems you need to tackle in your web apps; but when it comes to processing & displaying 3D models, it seems like it doesn’t have the best set of tools.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Thankfully, there’s a very good API for creating/displaying 3D models, which is `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://threejs.org/\"}}>{`three.js`}</MDXTag>{`. I’m not gonna talk about three.js in general today, but I’m gonna explain how I used three.js to engrave a 3D model with a small hack, but with great success.`}</MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"p\" components={components}>{`I’m freelancing for a couple of big fashion firms at the moment. A few weeks ago, I took this project of customizing (i.e. putting custom engravings on) 3D objects on web in real-time. We were already doing 2D engravings, but 3D was a whole new field. At first I didn’t think it was feasible, at least in real-time. But after lots of trials and errors with a 3D designer friend, we found a really good solution.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We first thought we could dynamically change the texture file and re-apply it on the object to engrave whichever place we want on the object. It sounds like a good and feasible solution, and it might be feasible for some cases, but in our case it was not. The issue is, since the objects we’re going to engrave are complex and not identical (they’re basically built by putting together a bunch of images or a video of the product we got from the studio), texture files are entirely different. To achieve what we wanted, we needed to find the coordinates/angles/etc. of the engraving area for each product, so it wasn’t really feasible.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Another possible solution was creating a mesh of our engraving dynamically and putting that on the object. But it was really hard to do, again, since the objects were really complex and not identical. We couldn’t possibly find the place to put that mesh dynamically, and even if we did, we could `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`never`}</MDXTag>{` place it perfectly on those complex surfaces.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Our clever solution was adding an empty mesh on each 3D model that covers the entire engraving area, and later on replacing that using three.js with the dynamically-created mesh that contains our engraving. This way we didn’t need to know anything about the texture file nor the object file in Javascript.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"object-and-font-preparation\"}}>{`Object and Font Preparation`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`First step is super simple: using any 3D software (e.g. Blender, 3ds Max), just put an empty mesh that covers the whole surface of your engraving area. Later on, we will create a dynamic mesh that contains our engraving using three.js and replace that mesh.`}</MDXTag>\n<img src={bag} alt=\"\" style={{ marginBottom: '1.5rem' }} />\n<MDXTag name=\"p\" components={components}>{`An optional step is `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`font preparation`}</MDXTag>{`. If you’re using images for each letter in your 2D engravings (just like us) because you want to have textures/gradients etc. in your letters, sadly you’ll need to have an actual font file instead of images. You should turn those images into a font using any software or online tool.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"javascript-part\"}}>{`Javascript Part`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`First step is to load the font file in CSS: (if you want to use a custom font)`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-css\",\"data-language\":\"css\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token atrule\\\"><span class=\\\"token rule\\\">@font-face</span></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token property\\\">font-family</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Engraving\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token property\\\">src</span><span class=\\\"token punctuation\\\">:</span>  <span class=\\\"token url\\\">url(\\\"font.otf\\\")</span> <span class=\\\"token function\\\">format</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"opentype\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token url\\\">url(\\\"font.ttf\\\")</span> <span class=\\\"token function\\\">format</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"truetype\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token property\\\">text-rendering</span><span class=\\\"token punctuation\\\">:</span> optimizeLegibility<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token property\\\">font-feature-settings</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"kern\\\"</span> 1<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token property\\\">font-kerning</span><span class=\\\"token punctuation\\\">:</span> normal<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Then create a basic scene in three.js. I’m skipping this since it’s explained in the official docs & many other blogs.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After creating your scene; create a canvas for the engraving material, and create the engraving material:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">const</span> textCanvas <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">querySelector</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'#text-canvas'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> engravedText <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">THREE<span class=\\\"token punctuation\\\">.</span>Texture</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> engravingMaterial <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">THREE<span class=\\\"token punctuation\\\">.</span>MeshPhongMaterial</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  map<span class=\\\"token punctuation\\\">:</span> engravedText<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\">// set the material settings so that your engraving will look good</span>\\n  <span class=\\\"token comment\\\">// under different angles/lightings</span>\\n  color<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0x969696</span><span class=\\\"token punctuation\\\">,</span>\\n  reflectivity<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n  shininess<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span>\\n  flatShading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  fog<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  refractionRatio<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0.98</span><span class=\\\"token punctuation\\\">,</span>\\n  skinning<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n  specular<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0x000000</span><span class=\\\"token punctuation\\\">,</span>\\n  depthFunc<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span>\\n  blendDst<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">205</span><span class=\\\"token punctuation\\\">,</span>\\n  blendSrc<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">204</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// make it transparent so the only visible thing is the engraving</span>\\nengravingMaterial<span class=\\\"token punctuation\\\">.</span>transparent <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Load your model using three.js and replace the dummy material (which is the engraving area) with the engraving material we just created:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">THREE<span class=\\\"token punctuation\\\">.</span>MTLLoader</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/'</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">load</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'obj.mtl'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">materials</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          materials<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">preload</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token keyword\\\">const</span> manager <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">initLoadingManager</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">THREE<span class=\\\"token punctuation\\\">.</span>OBJLoader</span><span class=\\\"token punctuation\\\">(</span>manager<span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setMaterials</span><span class=\\\"token punctuation\\\">(</span>materials<span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/'</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">load</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'obj.obj'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">object</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n              mainObject <span class=\\\"token operator\\\">=</span> object<span class=\\\"token punctuation\\\">;</span>\\n              <span class=\\\"token comment\\\">// replace the dummy material with our custom engraving material</span>\\n              mainObject<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>material <span class=\\\"token operator\\\">=</span> backMaterial<span class=\\\"token punctuation\\\">;</span>\\n              mainObject<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>material<span class=\\\"token punctuation\\\">.</span>needsUpdate <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n              <span class=\\\"token operator\\\">...</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now everything is set. There are 3 steps to apply an engraving;`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Fill the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`textCanvas`}</MDXTag>{` with your engraving text.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Apply the canvas to the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`engravedText`}</MDXTag>{` texture.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Apply the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`engravingMaterial`}</MDXTag>{` to the main object and re-render.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Simple enough. Here’s how it looks like in code:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">engraveText</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">text</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> context <span class=\\\"token operator\\\">=</span> textCanvas<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getContext</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"2d\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">// clear the canvas</span>\\n  textCanvas<span class=\\\"token punctuation\\\">.</span>width <span class=\\\"token operator\\\">=</span> textCanvas<span class=\\\"token punctuation\\\">.</span>width<span class=\\\"token punctuation\\\">;</span>\\n  context<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">clearRect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>textCanvas<span class=\\\"token punctuation\\\">.</span>width<span class=\\\"token punctuation\\\">,</span>textCanvas<span class=\\\"token punctuation\\\">.</span>height<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">// put the engraving on the canvas</span>\\n  context<span class=\\\"token punctuation\\\">.</span>font <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"170px Engraving\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  context<span class=\\\"token punctuation\\\">.</span>fillStyle <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"#d2c2af\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  context<span class=\\\"token punctuation\\\">.</span>textAlign <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"center\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  context<span class=\\\"token punctuation\\\">.</span>textBaseline <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"middle\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  context<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">fillText</span><span class=\\\"token punctuation\\\">(</span>text<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toLocaleUpperCase</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> textCanvas<span class=\\\"token punctuation\\\">.</span>scrollWidth <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> textCanvas<span class=\\\"token punctuation\\\">.</span>scrollHeight <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">// patch the canvas onto the 3d object</span>\\n  engravedText<span class=\\\"token punctuation\\\">.</span>image <span class=\\\"token operator\\\">=</span> textCanvas<span class=\\\"token punctuation\\\">;</span>\\n  engravedText<span class=\\\"token punctuation\\\">.</span>needsUpdate <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n  mainObject<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>material <span class=\\\"token operator\\\">=</span> engravingMaterial<span class=\\\"token punctuation\\\">;</span>\\n  mainObject<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>material<span class=\\\"token punctuation\\\">.</span>needsUpdate <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Voila. And you should see your text engraved on the object.`}</MDXTag>\n<img src={test3D} alt=\"\" style={{ marginBottom: '1.5rem' }} />\n<MDXTag name=\"p\" components={components}>{`It was really satisfying to see this result.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can let me know if you have any issues or questions using the comment box below.`}</MDXTag>\n</div>\n           </MDXTag>\n  }\n}\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"object-and-font-preparation\",\n    level: 2,\n    title: \"Object and Font Preparation\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"javascript-part\",\n    level: 2,\n    title: \"Javascript Part\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","module.exports = __webpack_public_path__ + \"static/media/bag.7e08a934.png\";","module.exports = __webpack_public_path__ + \"static/media/3d-test.d6f4858e.png\";"],"sourceRoot":""}