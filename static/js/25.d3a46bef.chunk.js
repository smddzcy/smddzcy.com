(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{100:function(e,n,t){"use strict";function a(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}t.d(n,"a",function(){return a})},101:function(e,n,t){"use strict";function a(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function o(e,n,t){return n&&a(e.prototype,n),t&&a(e,t),e}t.d(n,"a",function(){return o})},102:function(e,n,t){"use strict";function a(e){return(a=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}t.d(n,"a",function(){return a})},103:function(e,n,t){"use strict";function a(e){return(a="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e){return(o="function"===typeof Symbol&&"symbol"===a(Symbol.iterator)?function(e){return a(e)}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":a(e)})(e)}function r(e,n){return!n||"object"!==o(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}t.d(n,"a",function(){return r})},104:function(e,n,t){"use strict";function a(e,n){return(a=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function o(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&a(e,n)}t.d(n,"a",function(){return o})},133:function(e,n,t){"use strict";t.r(n),t.d(n,"readingTime",function(){return g}),t.d(n,"default",function(){return b}),t.d(n,"tableOfContents",function(){return y}),t.d(n,"frontMatter",function(){return E});var a=t(19),o=t(100),r=t(101),c=t(103),p=t(102),s=t(104),i=t(0),m=t.n(i),l=t(28),u=t(134),f=t.n(u),d=t(135),h=t.n(d),g={text:"3 min read",minutes:2.38,time:142799.99999999997,words:476},b=function(e){function n(e){var t;return Object(o.a)(this,n),(t=Object(c.a)(this,Object(p.a)(n).call(this,e))).layout=null,t}return Object(s.a)(n,e),Object(r.a)(n,[{key:"render",value:function(){var e=this.props,n=e.components;Object(a.a)(e,["components"]);return m.a.createElement(l.MDXTag,{name:"wrapper",components:n},m.a.createElement("div",null,m.a.createElement(l.MDXTag,{name:"p",components:n},"Today is the day. After receiving tons of emails from Jetpack and seeing my server down countless times over the last couple of weeks, I finally made the switch from ",m.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"mod_php")," to ",m.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"php-fpm"),"."),m.a.createElement("figure",null,m.a.createElement("img",{src:f.a,alt:""}),m.a.createElement("figcaption",null,m.a.createElement("em",null,'"Your site is extremely slow."'))),m.a.createElement("figure",null,m.a.createElement("img",{src:h.a,alt:""}),m.a.createElement("figcaption",null,m.a.createElement("em",null,'"Your server is not responding."'))),m.a.createElement(l.MDXTag,{name:"p",components:n},"These are basically what I received from Jetpack over and over again. It was totally expected though. My server has the cheapest configuration from DigitalOcean (1 CPU, 512 MB memory) and I host all of my applications on this weak little fella. One of those applications is ",m.a.createElement(l.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"http://localhost/smddzcy.com/BounCoursePlanner/"}},"BOUN Course Planner"),", which was extremely popular for the last couple of weeks because of the online registration period. It attracted ",m.a.createElement(l.MDXTag,{name:"strong",components:n,parentName:"p"},"2000 people per day"),", but my little server couldn\u2019t handle that much traffic. Specifically, it couldn\u2019t handle ",m.a.createElement(l.MDXTag,{name:"strong",components:n,parentName:"p"},"more than ~30 active connections"),"."),m.a.createElement(l.MDXTag,{name:"p",components:n},"I made a small load test and noticed that the Apache processes consume all the memory when there are multiple active connections. The source of the problem was obvious: Apache PHP module, a.k.a. ",m.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"mod_php"),". It is the module that allows Apache to interpret PHP files, and it\u2019s known to suffer from this kind of memory problems."),m.a.createElement(l.MDXTag,{name:"p",components:n},"The solution was simple. I removed ",m.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"mod_php"),", tried to migrate to NGINX with ",m.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"php-fpm"),", failed (was too lazy to configure the NGINX), migrated to ",m.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"php-fpm")," only. Here is what I did and what you should do to migrate to ",m.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"php-fpm")," if you are running Ubuntu 16.04 and using PHP 7.0:"),m.a.createElement(l.MDXTag,{name:"pre",components:n},m.a.createElement(l.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-bash","data-language":"bash","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token function">sudo</span> <span class="token function">apt-get</span> remove libapache2-mod-php7.0 <span class="token comment"># remove mod_php</span>\n<span class="token function">sudo</span> <span class="token function">apt-get</span> -y <span class="token function">install</span> php7.0-fpm libapache2-mod-fastcgi <span class="token comment"># install php-fpm</span>\n<span class="token function">sudo</span> a2dismod mpm_worker mpm_prefork <span class="token comment"># disable the conflicting modules</span>\n<span class="token function">sudo</span> a2enmod actions fastcgi <span class="token function">alias</span> rewrite mpm_event <span class="token comment"># enable the required modules</span>\n'}}})),m.a.createElement(l.MDXTag,{name:"p",components:n},"Add the following configuration to ",m.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"/etc/apache2/conf-available/php7.0-fpm.conf"),":"),m.a.createElement(l.MDXTag,{name:"pre",components:n},m.a.createElement(l.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"<IfModule mod_fastcgi.c>\n    SetHandler php7-fcgi .php\n    Action php7-fcgi /php7-fcgi virtual\n    Alias /php7-fcgi /usr/lib/cgi-bin/php7-fcgi\n    FastCgiExternalServer /usr/lib/cgi-bin/php7-fcgi -socket /var/run/php/php7.0-fpm.sock -pass-header Authorization -idle-timeout 3600\n    <Directory /usr/lib/cgi-bin>\n        Require all granted\n    </Directory>\n</IfModule>\n")),m.a.createElement(l.MDXTag,{name:"p",components:n},"Then enable the configuration and restart the services to see the changes:"),m.a.createElement(l.MDXTag,{name:"pre",components:n},m.a.createElement(l.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"sudo a2enconf php7.0-fpm # enable the php-fpm configuration\nservice apache2 restart\nservice php7.0-fpm restart\n")),m.a.createElement(l.MDXTag,{name:"p",components:n},"That\u2019s all. You should have your web server up and running with ",m.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"php-fpm")," now."),m.a.createElement(l.MDXTag,{name:"p",components:n},"I made some other load tests after the migration, and here are the results:"),m.a.createElement(l.MDXTag,{name:"ul",components:n},m.a.createElement(l.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(l.MDXTag,{name:"strong",components:n,parentName:"li"},"Test 1"),": 10 to 200 active clients over 1 min (",m.a.createElement(l.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"https://loader.io/reports/c80fb2e2183d2035e8b1f5243a817813/results/3331ea8791f2e237fc4252153fa24fdb"}},"Link to the results"),")\nResponse time: 143 ms on average, ",m.a.createElement(l.MDXTag,{name:"strong",components:n,parentName:"li"},"276 ms with 200 active connections"),".\nError rate: %0.00 (No connection drop, no timeout)"),m.a.createElement(l.MDXTag,{name:"li",components:n,parentName:"ul"},m.a.createElement(l.MDXTag,{name:"strong",components:n,parentName:"li"},"Test 2"),": 10 to 500 active clients over 1 min (",m.a.createElement(l.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"http://loader.io/reports/c80fb2e2183d2035e8b1f5243a817813/results/fdf514b9846a6a66eaf532c7af05093e"}},"Link to the results"),")\nResponse time: 350 ms on average, ",m.a.createElement(l.MDXTag,{name:"strong",components:n,parentName:"li"},"610 ms with 500 active connections"),".\nError rate: %0.00 (No connection drop, no timeout)")),m.a.createElement(l.MDXTag,{name:"p",components:n},"Memory usage during the tests: 52% - 67%. Outcome: ",m.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"php-fpm")," is clearly better than ",m.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"mod_php"),".")))}}]),n}(m.a.Component),y=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[]},E={}},134:function(e,n,t){e.exports=t.p+"static/media/img1.e7cadeab.png"},135:function(e,n,t){e.exports=t.p+"static/media/img2.d3de002c.png"}}]);
//# sourceMappingURL=25.d3a46bef.chunk.js.map