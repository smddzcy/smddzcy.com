(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{228:function(n,a,s){"use strict";function e(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}s.d(a,"a",function(){return e})},229:function(n,a,s){"use strict";function e(n,a){for(var s=0;s<a.length;s++){var e=a[s];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(n,e.key,e)}}function t(n,a,s){return a&&e(n.prototype,a),s&&e(n,s),n}s.d(a,"a",function(){return t})},230:function(n,a,s){"use strict";function e(n){return(e=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}s.d(a,"a",function(){return e})},231:function(n,a,s){"use strict";function e(n){return(e="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function t(n){return(t="function"===typeof Symbol&&"symbol"===e(Symbol.iterator)?function(n){return e(n)}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":e(n)})(n)}function o(n,a){return!a||"object"!==t(a)&&"function"!==typeof a?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):a}s.d(a,"a",function(){return o})},232:function(n,a,s){"use strict";function e(n,a){return(e=Object.setPrototypeOf||function(n,a){return n.__proto__=a,n})(n,a)}function t(n,a){if("function"!==typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(a&&a.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),a&&e(n,a)}s.d(a,"a",function(){return t})},271:function(n,a,s){"use strict";s.r(a),s.d(a,"readingTime",function(){return m}),s.d(a,"default",function(){return k}),s.d(a,"tableOfContents",function(){return g}),s.d(a,"frontMatter",function(){return d});var e=s(50),t=s(228),o=s(229),p=s(231),c=s(230),l=s(232),r=s(0),i=s.n(r),u=s(73),m={text:"6 min read",minutes:5.095,time:305700,words:1019},k=function(n){function a(n){var s;return Object(t.a)(this,a),(s=Object(p.a)(this,Object(c.a)(a).call(this,n))).layout=null,s}return Object(l.a)(a,n),Object(o.a)(a,[{key:"render",value:function(){var n=this.props,a=n.components;Object(e.a)(n,["components"]);return i.a.createElement(u.MDXTag,{name:"wrapper",components:a},i.a.createElement("div",null,i.a.createElement(u.MDXTag,{name:"p",components:a},"It\u2019s a very natural need: providing your application in different languages. I will try to look at 2 popular i18n libraries for React today, and discuss the pros and cons of each option."),i.a.createElement(u.MDXTag,{name:"blockquote",components:a},i.a.createElement(u.MDXTag,{name:"p",components:a,parentName:"blockquote"},"Since internationalization is a ",i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"p"},"veeeery")," long word, I\u2019ll abbreviate it to \u201ci18n\u201d. Localization can also be considered long, so it\u2019ll be abbreviated to \u201cl10n\u201d.")),i.a.createElement(u.MDXTag,{name:"h2",components:a,props:{id:"option-1-react-intl"}},"Option 1: react-intl"),i.a.createElement(u.MDXTag,{name:"h3",components:a,props:{id:"popularity"}},"Popularity"),i.a.createElement(u.MDXTag,{name:"ul",components:a},i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"li"},"Weekly downloads from npm:")," 371,603"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"li"},"Dependent npm packages:")," 1,451"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"li"},"GitHub stars:")," 9,875"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"li"},"Issues:")," 189")),i.a.createElement(u.MDXTag,{name:"p",components:a},"As of writing this, ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"react-intl")," looks like the most popular choice for i18n in React. It has a huge user base with almost 400k downloads per week. It also has lots of examples and articles online."),i.a.createElement(u.MDXTag,{name:"h3",components:a,props:{id:"features"}},"Features"),i.a.createElement(u.MDXTag,{name:"p",components:a},"It is a huge library that does both i18n and l10n. It formats dates, numbers, and strings, including pluralization and handling translations. It probably has everything you need from an i18n/l10n library:"),i.a.createElement(u.MDXTag,{name:"ul",components:a},i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},"Display numbers with localized separators"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},"Display localized dates and times"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},"Pluralize labels in strings"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},"Support for lots of (150+) languages"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},"Runs in the browser and Node.js"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},"Follows the standards")),i.a.createElement(u.MDXTag,{name:"h3",components:a,props:{id:"how-to-use"}},"How to Use"),i.a.createElement(u.MDXTag,{name:"p",components:a},"Install the library:"),i.a.createElement(u.MDXTag,{name:"pre",components:a},i.a.createElement(u.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-bash","data-language":"bash","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token function">yarn</span> <span class="token function">add</span> react-intl\n'}}})),i.a.createElement(u.MDXTag,{name:"p",components:a},"Wrap your application with ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"IntlProvider")," providing the user\u2019s locale and translations for that locale:"),i.a.createElement(u.MDXTag,{name:"pre",components:a},i.a.createElement(u.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> IntlProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-intl\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token keyword">const</span> usersLocale <span class="token operator">=</span> <span class="token string">\'en\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> translationsForUsersLocale <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token string">\'blog.title\'</span><span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Blog of {whom} - {viewCount, number} {viewCount, plural,\n    one {view}\n    other {views}\n  }`</span></span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">IntlProvider</span></span>\n        <span class="token attr-name">locale</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>usersLocale<span class="token punctuation">}</span></span>\n        <span class="token attr-name">messages</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>translationsForUsersLocale<span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span><span class="token punctuation">/></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">IntlProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'root\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),i.a.createElement(u.MDXTag,{name:"p",components:a},"Then use ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"FormattedMessage")," to translate, pluralize, format strings:"),i.a.createElement(u.MDXTag,{name:"pre",components:a},i.a.createElement(u.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> FormattedMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-intl\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FormattedMessage</span></span>\n  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>blog.title<span class="token punctuation">"</span></span>\n  <span class="token attr-name">values</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> whom<span class="token punctuation">:</span> <span class="token string">\'Samed D\xfcz\xe7ay\'</span><span class="token punctuation">,</span> viewCount<span class="token punctuation">:</span> <span class="token number">5000</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n<span class="token comment">// => Blog of Samed D\xfcz\xe7ay - 5,000 views</span>\n'}}})),i.a.createElement(u.MDXTag,{name:"p",components:a},"There are also other components like ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"FormattedHTMLMessage"),", ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"FormattedNumber"),", ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"FormattedDate"),"\u2026 and more to localize other forms of strings. You can check all of those and more from the official docs: ",i.a.createElement(u.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://github.com/formatjs/react-intl/wiki"}},"https://github.com/formatjs/react-intl/wiki")),i.a.createElement(u.MDXTag,{name:"p",components:a},"One small note: By default, ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"react-intl")," only contains the locale data for English, but it provides a simple API to add locales as needed:"),i.a.createElement(u.MDXTag,{name:"pre",components:a},i.a.createElement(u.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> <span class="token punctuation">{</span> addLocaleData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-intl\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> en <span class="token keyword">from</span> <span class="token string">\'react-intl/locale-data/en\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> fr <span class="token keyword">from</span> <span class="token string">\'react-intl/locale-data/fr\'</span><span class="token punctuation">;</span>\n\n<span class="token function">addLocaleData</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>en<span class="token punctuation">,</span> <span class="token operator">...</span>fr<span class="token punctuation">,</span> <span class="token operator">...</span>es<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),i.a.createElement(u.MDXTag,{name:"h3",components:a,props:{id:"proscons"}},"Pros/Cons"),i.a.createElement(u.MDXTag,{name:"p",components:a},"It is a very scalable i18n solution, but IMHO it\u2019s not an easy-to-use one. Its API is a bit complex - maybe even too complex for small and mid-size projects. I\u2019d recommend ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"react-intl")," for big projects where you need a complete ","&"," scalable localization system."),i.a.createElement(u.MDXTag,{name:"ul",components:a},i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"li"},"+")," Complete localization solution"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"li"},"+")," Support for many locales"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"li"},"+")," Scalable, flexible"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"li"},"-")," Hard to use")),i.a.createElement(u.MDXTag,{name:"h2",components:a,props:{id:"option-2-react-i18next"}},"Option 2: react-i18next"),i.a.createElement(u.MDXTag,{name:"h3",components:a,props:{id:"popularity-1"}},"Popularity"),i.a.createElement(u.MDXTag,{name:"ul",components:a},i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"li"},"Weekly downloads from npm:")," 186,357"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"li"},"Dependent npm packages:")," 444"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"li"},"GitHub stars:")," 3,222"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"li"},"Issues:")," 2")),i.a.createElement(u.MDXTag,{name:"p",components:a},"It is also a super popular choice for i18n with almost 200k downloads per week, and again, you can find lots of tutorials and examples online."),i.a.createElement(u.MDXTag,{name:"h3",components:a,props:{id:"features-1"}},"Features"),i.a.createElement(u.MDXTag,{name:"p",components:a},"It\u2019s a smaller library than ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"react-intl"),", but as far as I\u2019ve seen it\u2019s ",i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"p"},"really")," flexible and it does the job just as well."),i.a.createElement(u.MDXTag,{name:"ul",components:a},i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},"Built on top of a core that\u2019s really flexible"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},"Pluralize labels in strings"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},"Support for multiple languages"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},"Runs in the browser and Node.js"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},"Follows the standards")),i.a.createElement(u.MDXTag,{name:"h3",components:a,props:{id:"how-to-use-1"}},"How to Use"),i.a.createElement(u.MDXTag,{name:"p",components:a},"New version of ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"react-i18next")," supports React Hooks (yay \ud83c\udf89) so you have 2 ways: you can use the hook ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useTranslation")," for your functional components and use the HOC ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"withTranslation")," for your old ","&"," bulky class components. I\u2019m going to be using the hook version for the examples, but the HOC version is just as simple to use."),i.a.createElement(u.MDXTag,{name:"p",components:a},"Install the libraries:"),i.a.createElement(u.MDXTag,{name:"pre",components:a},i.a.createElement(u.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-bash","data-language":"bash","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token function">yarn</span> <span class="token function">add</span> i18next react-i18next i18next-browser-languagedetector\n'}}})),i.a.createElement(u.MDXTag,{name:"p",components:a},"Create a file called ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"i18n.js")," and configure the library:"),i.a.createElement(u.MDXTag,{name:"pre",components:a},i.a.createElement(u.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// i18n.js</span>\n<span class="token keyword">import</span> i18n <span class="token keyword">from</span> <span class="token string">\'i18next\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> LanguageDetector <span class="token keyword">from</span> <span class="token string">\'i18next-browser-languagedetector\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> initReactI18next <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-i18next\'</span><span class="token punctuation">;</span>\n\ni18n\n  <span class="token comment">// detect user language</span>\n  <span class="token comment">// learn more: https://github.com/i18next/i18next-browser-languageDetector</span>\n  <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>LanguageDetector<span class="token punctuation">)</span>\n  <span class="token comment">// pass the i18n instance to react-i18next.</span>\n  <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>initReactI18next<span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    fallbackLng<span class="token punctuation">:</span> <span class="token string">\'en\'</span><span class="token punctuation">,</span>\n    debug<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// I\'m hardcoding the translations here for the sake of simplicity,</span>\n    <span class="token comment">// but in a real-world application you would get these from a backend.</span>\n    <span class="token comment">// i18next has a small plugin that makes it easy.</span>\n    <span class="token comment">// learn more: https://github.com/i18next/i18next-xhr-backend</span>\n    resources<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token string">\'en\'</span><span class="token punctuation">:</span><span class="token punctuation">{</span>\n        <span class="token string">\'translation\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          test<span class="token punctuation">:</span> <span class="token string">\'Test translation\'</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    interpolation<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      escapeValue<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// not needed for React as it escapes by default</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),i.a.createElement(u.MDXTag,{name:"p",components:a},"Import the ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"i18n.js")," from your ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"index.js")," so it gets bundled:"),i.a.createElement(u.MDXTag,{name:"pre",components:a},i.a.createElement(u.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">\'react-dom\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./index.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">\'./App\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token string">\'./i18n\'</span><span class="token punctuation">;</span> <span class="token comment">// &lt;-----</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'root\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n'}}})),i.a.createElement(u.MDXTag,{name:"p",components:a},"Now you can use the hook or the HOC easily in any component. Here\u2019s a simple example:"),i.a.createElement(u.MDXTag,{name:"pre",components:a},i.a.createElement(u.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// App.js</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Suspense <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useTranslation <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-i18next\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> t<span class="token punctuation">,</span> i18n <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useTranslation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">changeLanguage</span> <span class="token operator">=</span> <span class="token parameter">lng</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    i18n<span class="token punctuation">.</span><span class="token function">changeLanguage</span><span class="token punctuation">(</span>lng<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>App<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>App-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">changeLanguage</span><span class="token punctuation">(</span><span class="token string">\'de\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">de</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">changeLanguage</span><span class="token punctuation">(</span><span class="token string">\'en\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">en</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token function">t</span><span class="token punctuation">(</span><span class="token string">\'test\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Loader</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>App<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">loading...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// here Suspense shows the Loader in case translations are not yet loaded</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Suspense</span></span> <span class="token attr-name">fallback</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Loader</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Page</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Suspense</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n'}}})),i.a.createElement(u.MDXTag,{name:"p",components:a},i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"useTranslation")," hook gives you an object with 2 important keys:"),i.a.createElement(u.MDXTag,{name:"ul",components:a},i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"t"),": It\u2019s a function that takes a translation key and returns the translated message. In our case above, ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"t('test')")," returns our translation ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"Test translation"),"."),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"i18n"),": It\u2019s an object with a very important function in it, ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"changeLanguage"),". It\u2019s pretty self-explanatory; you can change the language by using that function.")),i.a.createElement(u.MDXTag,{name:"p",components:a},"If you want to learn more, check the documentation page: ",i.a.createElement(u.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"https://react.i18next.com/"}},"https://react.i18next.com/")),i.a.createElement(u.MDXTag,{name:"h3",components:a,props:{id:"proscons-1"}},"Pros/Cons"),i.a.createElement(u.MDXTag,{name:"p",components:a},"It is a very simple i18n solution that\u2019s also very flexible."),i.a.createElement(u.MDXTag,{name:"ul",components:a},i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"li"},"+")," Extremely easy-to-use i18n solution"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"li"},"+")," Support for many locales"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"li"},"+")," Scalable, very flexible"),i.a.createElement(u.MDXTag,{name:"li",components:a,parentName:"ul"},i.a.createElement(u.MDXTag,{name:"strong",components:a,parentName:"li"},"-")," Not as complete as ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"react-intl"))),i.a.createElement(u.MDXTag,{name:"hr",components:a}),i.a.createElement(u.MDXTag,{name:"p",components:a},"All in all, I think ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"react-i18next")," is a simpler ","&"," more developer-friendly library that can also be used in very big projects thanks to its flexibility and simple API. As of writing, ",i.a.createElement(u.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"react-i18next")," is my go-to i18n solution for all of my projects.")))}}]),a}(i.a.Component),g=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[{id:"option-1-react-intl",level:2,title:"Option 1: react-intl",children:[{id:"popularity",level:3,title:"Popularity",children:[]},{id:"features",level:3,title:"Features",children:[]},{id:"how-to-use",level:3,title:"How to Use",children:[]},{id:"proscons",level:3,title:"Pros/Cons",children:[]}]},{id:"option-2-react-i18next",level:2,title:"Option 2: react-i18next",children:[{id:"popularity-1",level:3,title:"Popularity",children:[]},{id:"features-1",level:3,title:"Features",children:[]},{id:"how-to-use-1",level:3,title:"How to Use",children:[]},{id:"proscons-1",level:3,title:"Pros/Cons",children:[]}]}]},d={}}}]);
//# sourceMappingURL=33.69571022.chunk.js.map