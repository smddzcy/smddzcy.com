{"version":3,"sources":["components/ArticleSummary.module.css","components/Bio.module.css","components/astronaut-doge.gif","index.js","components/Pagination.module.css","components/NotFoundPage.js","components/BlogPostLayout.module.css","utils/formats.js","components/ArticleMeta.js","components/ArticleMeta.module.css","components/BlogIndexPage.module.css","siteMetadata.js","components/Bio.js","components/Pagination.js","components/BlogIndexPage.js","components/LoadingIndicator.js","components/BlogLayout.js","components/BlogPostLayout.js","routes/posts/index.js","routes/index.js","components/LoadingIndicator.module.css","components/BlogLayout.module.css","components/ArticleSummary.js"],"names":["module","exports","ArticleSummary","Bio","__webpack_require__","p","register","routes","main","_main","Object","_Users_samedduzcay_Desktop_blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samedduzcay_Desktop_blog_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","navigation","wrap","_context","prev","next","createBrowserNavigation","getRoute","ReactGA","initialize","pageview","window","location","pathname","search","history","listen","process","renderer","ReactDOM","hydrate","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","react_navi__WEBPACK_IMPORTED_MODULE_7__","document","getElementById","stop","apply","this","arguments","Pagination","previous","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_navi__WEBPACK_IMPORTED_MODULE_1__","_NotFoundPage_module_css__WEBPACK_IMPORTED_MODULE_2__","_NotFoundPage_module_css__WEBPACK_IMPORTED_MODULE_2___default","_astronaut_doge_gif__WEBPACK_IMPORTED_MODULE_3__","_astronaut_doge_gif__WEBPACK_IMPORTED_MODULE_3___default","NotFoundPage","className","styles","NotFound","src","doge","alt","style","maxWidth","marginTop","href","title","header","footer","bio","links","content","postSocial","socialButton","faIcon","faIconText","facebook","twitter","linkedin","reddit","whatsapp","telegram","months","ArticleMeta","_ref","readingTimeElement","blogRoot","meta","readingTime","minutes","Math","max","round","cups","react_default","Fragment","Array","fill","join","dateTime","date","toUTCString","dateString","Date","monthName","getMonth","dayOfMonth","getDate","fourDigitYear","getFullYear","concat","formatDate","tags","length","map","tag","key","es","articlesList","siteMetadata","author","description","indexPageSize","props","rel","target","marginRight","margin","pageCount","pageNumber","dist_es","String","pages","current","count","BlogIndexPage","postRoutes","components_Bio","route","url","components_Pagination","float","LoadingIndicator","active","BlogLayout","isViewingIndex","loadingRoute","useLoadingRoute","container","components_LoadingIndicator","render","SocialShare","config","FacebookShareButton","assign","index_es","icon","faFacebookF","TwitterShareButton","via","faTwitter","LinkedinShareButton","faLinkedinIn","RedditShareButton","faRedditAlien","WhatsappShareButton","faWhatsapp","TelegramShareButton","faTelegram","BlogPostLayout","_useCurrentRoute","useCurrentRoute","data","postUrl","disqusConfig","identifier","slug","imageUrl","_ref2","MDXComponent","Helmet_default","property","spoiler","toISOString","name","type","JSON","stringify","@context","@type","itemListElement","position","item","@id","dist","components","newProps","objectSpread","includes","wrapper","_ref3","children","hashtags","kebabCase","lib","shortname","previousDetails","nextDetails","postModules","./2016-01-05-installing-configuring-php7-zts-on-os-x/post.js","e","then","bind","./2016-01-26-multi-threading-in-php7-pthreads/post.js","./2016-05-15-lambdas-in-java-8/post.js","./2016-06-03-streams-in-java-8/post.js","./2016-06-08-default-methods-java-8/post.js","./2016-10-11-multithreading-in-java/post.js","./2017-01-22-thread-synchronization-java/post.js","./2017-02-08-functional-programming-a-beginners-view/post.js","./2017-09-16-migrating-from-mod-php-to-php-fpm/post.js","./2019-05-06-hello-world/post.js","./2019-05-13-deploying-react-application-on-azure/post.js","./2019-05-14-azure-cosmos-db-review/post.js","./2019-05-15-mongooselike-orm-for-azure-cosmos-db-sql-api/post.js","./2019-05-17-internationalization-in-react/post.js","importPost","postPathnames","keys","datePattern","postDetails","slugify","replace","dateMatch","match","parseInt","posts","sortBy","reverse","i","getPage","Navi","asyncToGenerator","regenerator_default","_callee2","post","getContent","previousSlug","previousPost","nextSlug","nextPost","previousPostDetails","nextPostDetails","_context2","sent","default","objectWithoutProperties","abrupt","getData","req","context","getView","_getView","_ref4","other","chunks","chunk","chunkPagePairs","pageTitle","method","Promise","all","res","resolve","_x3","view","components_BlogIndexPage","_x","_x2","compose","withContext","mountpath","withView","path","test","components_BlogLayout","mount","/","shift","/page","/1","redirect","fromPairs","/posts","components_BlogPostLayout","/tags","lazy","/about","/travel-map","/rss","/404","LoadingIndicator-animation","_ArticleMeta__WEBPACK_IMPORTED_MODULE_2__","_ArticleSummary_module_css__WEBPACK_IMPORTED_MODULE_3__","_ArticleSummary_module_css__WEBPACK_IMPORTED_MODULE_3___default"],"mappings":"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","file":"static/js/main.b72f32ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ArticleSummary\":\"ArticleSummary_ArticleSummary__3h8OK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bio\":\"Bio_Bio__3ifbk\"};","module.exports = __webpack_public_path__ + \"static/media/astronaut-doge.d3740d48.gif\";","import register from 'navi-scripts/register';\nimport { createBrowserNavigation } from 'navi';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\nimport { Router } from 'react-navi';\nimport './index.module.css';\nimport routes from './routes';\n\n// `register()` is responsible for exporting your app's pages and App\n// component to the static renderer, and for starting the app with the\n// `main()` function when running within a browser.\nregister({\n  // Specify the pages that navi-app should statically build, by passing in a\n  // Switch object.\n  routes,\n\n  // This will only be called when loading your app in the browser. It won't\n  // be called when performing static generation.\n  async main() {\n    const navigation = createBrowserNavigation({ routes });\n\n    // Wait until the navigation has loaded the page's content, or failed to do\n    // so. If you want to load other data in parallel while the initial page is\n    // loading, make sure to start loading before this line.\n    await navigation.getRoute();\n\n    if (process.env.NODE_ENV === 'production') {\n      ReactGA.initialize('UA-43755905-3');\n      ReactGA.pageview(window.location.pathname + window.location.search);\n      navigation.history.listen(location => {\n        ReactGA.pageview(location.pathname + location.search);\n      });\n    }\n\n    // React requires that you call `ReactDOM.hydrate` if there is statically\n    // rendered content in the root element, but prefers us to call\n    // `ReactDOM.render` when it is empty.\n    const hasStaticContent = process.env.NODE_ENV === 'production';\n    const renderer = hasStaticContent ? ReactDOM.hydrate : ReactDOM.render;\n\n    // Start react, passing in the current navigation state and\n    // rendering the top-level view.\n    renderer(\n      <Router navigation={navigation} />,\n      document.getElementById('root')\n    );\n  },\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pagination\":\"Pagination_Pagination__A5Xia\",\"previous\":\"Pagination_previous__1UBHH\",\"next\":\"Pagination_next__3HtP9\"};","import React from 'react';\nimport { Link } from 'react-navi';\nimport styles from './NotFoundPage.module.css';\nimport doge from './astronaut-doge.gif';\n\n// Note that create-react-navi-app will always show an error screen when this\n// is rendered. This is because the underlying react-scripts package shows\n// the error screen when a NotFoundError is thrown, even though it's caught\n// by <NotFoundBoundary>. To see the error rendered by this function,\n// you'll just need to close the error overlay with the \"x\" at the top right.\nfunction NotFoundPage() {\n  return (\n    <div className={styles.NotFound}>\n      <h1>404 - Not Found</h1>\n      <div><img src={doge} alt=\"Astronaut Doge\" style={{ maxWidth: 320 }} /></div>\n      <div style={{ marginTop: '2rem' }}>You're drunk, <Link href=\"/\">go home</Link>.</div>\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BlogPostLayout_title__3g2FG\",\"header\":\"BlogPostLayout_header__2LB8S\",\"footer\":\"BlogPostLayout_footer__2aOsZ\",\"bio\":\"BlogPostLayout_bio__3d60S\",\"links\":\"BlogPostLayout_links__2NwEx\",\"next\":\"BlogPostLayout_next__3Rs3G\",\"content\":\"BlogPostLayout_content__jzLFq\",\"postSocial\":\"BlogPostLayout_postSocial__32Xub\",\"socialButton\":\"BlogPostLayout_socialButton__UrBdR\",\"faIcon\":\"BlogPostLayout_faIcon__pcxEP\",\"faIconText\":\"BlogPostLayout_faIconText__1s-Dc\",\"facebook\":\"BlogPostLayout_facebook__126TO\",\"twitter\":\"BlogPostLayout_twitter__O1iHu\",\"linkedin\":\"BlogPostLayout_linkedin__35xCO\",\"reddit\":\"BlogPostLayout_reddit__350WB\",\"whatsapp\":\"BlogPostLayout_whatsapp__PQweg\",\"telegram\":\"BlogPostLayout_telegram__3MSYj\"};","export const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nexport function formatDate(dateString) {\n  const date = new Date(dateString);\n  const monthName = months[date.getMonth()];\n  const dayOfMonth = date.getDate();\n  const fourDigitYear = date.getFullYear();\n\n  return `${monthName} ${dayOfMonth}, ${fourDigitYear}`;\n}\n","import { join } from 'path';\nimport React from 'react';\nimport { Link } from 'react-navi';\nimport { formatDate } from '../utils/formats';\nimport styles from './ArticleMeta.module.css';\n\nfunction ArticleMeta({ blogRoot, meta, readingTime }) {\n  let readingTimeElement;\n  if (readingTime) {\n    const minutes = Math.max(Math.round(readingTime.minutes), 1);\n    const cups = Math.round(minutes / 5);\n    readingTimeElement = (\n      <React.Fragment>\n        {' '}&bull;{' '}\n        <span className={styles.readingTime}>\n          {new Array(cups || 1).fill('☕️').join('')} {minutes} min read\n        </span>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <small className={styles.ArticleMeta}>\n      <time dateTime={meta.date.toUTCString()}>{formatDate(meta.date)}</time>\n      {\n        meta.tags\n        && meta.tags.length\n        && (\n        <>\n          {' '}&bull;{' '}\n          <ul className={styles.tags}>\n            {meta.tags.map(tag => (\n              <li key={tag}>\n                <Link href={join(blogRoot, 'tags', tag)}>{tag}</Link>\n              </li>\n            ))}\n          </ul>\n        </>\n        )\n      }\n      {readingTimeElement || null}\n    </small>\n  );\n}\n\nexport default ArticleMeta;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"ArticleMeta_tags__VKe_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BlogIndexPage_title__1EOzN\",\"articlesList\":\"BlogIndexPage_articlesList__2MIXj\",\"footer\":\"BlogIndexPage_footer__2e514\"};","export default {\n  title: 'smddzcy | yet another dev',\n  author: 'Samed Duzcay',\n  description: 'yet another dev. software engineer, web enthusiast. shares articles, tutorials and his thoughts on various things.',\n  indexPageSize: 10, // number of posts on a page\n};\n","import React from 'react';\nimport styles from './Bio.module.css';\n\nfunction Bio(props) {\n  return (\n    <div className={`\n      ${styles.Bio}\n      ${props.className || ''}\n    `}\n    >\n      <img src=\"https://pbs.twimg.com/profile_images/781276128673689600/tGOdd3qK_400x400.jpg\" alt=\"Me\" />\n      <div>\n        <div>\n          personal blog of <a href=\"https://twitter.com/smddzcy\" title=\"Twitter\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Samed Düzçay</a>.\n          <br />\n          software engineer, web enthusiast. shares articles, tutorials and his thoughts on various things.\n        </div>\n        <div>\n          <a href=\"https://linkedin.com/in/smddzcy\" title=\"LinkedIn\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" style={{ marginRight: 5 }}>LinkedIn</a>\n          &bull;\n          <a href=\"https://github.com/smddzcy\" title=\"GitHub\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" style={{ margin: '0 5px' }}>GitHub</a>\n          &bull;\n          <a href=\"https://twitter.com/smddzcy\" title=\"Twitter\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" style={{ margin: '0 5px' }}>Twitter</a>\n          &bull;\n          <a href=\"/cv\" title=\"CV\" style={{ margin: '0 5px' }}>CV</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Bio;\n","import { join } from 'path';\nimport React from 'react';\nimport { Link } from 'react-navi';\nimport styles from './Pagination.module.css';\n\nfunction Pagination({ blogRoot, pageCount, pageNumber }) {\n  return (\n    <small className={styles.Pagination}>\n      {\n        pageNumber !== 1\n        && (\n        <Link\n          className={styles.previous}\n          href={join(blogRoot, 'page', String(pageNumber - 1))}\n        >\n          ← Previous\n        </Link>\n        )\n      }\n      <span className={styles.pages}>\n        {' '}Page <span className={styles.current}>{pageNumber}</span>/<span className={styles.count}>{pageCount}</span>{' '}\n      </span>\n      {\n        pageNumber < pageCount\n        && (\n        <Link\n          className={styles.next}\n          href={join(blogRoot, 'page', String(pageNumber + 1))}\n        >\n          Next →\n        </Link>\n        )\n      }\n    </small>\n  );\n}\n\nexport default Pagination;\n","import React from 'react';\nimport { Link } from 'react-navi';\nimport siteMetadata from '../siteMetadata';\nimport ArticleSummary from './ArticleSummary';\nimport Bio from './Bio';\nimport Pagination from './Pagination';\nimport styles from './BlogIndexPage.module.css';\n\nfunction BlogIndexPage({\n  blogRoot, pageCount, pageNumber, postRoutes,\n}) {\n  return (\n    <div>\n      <header>\n        <h1 className={styles.title}>\n          <Link href={blogRoot}>{siteMetadata.title}</Link>\n        </h1>\n        <Bio />\n      </header>\n      <ul className={styles.articlesList}>\n        {postRoutes.map(route => (\n          <li key={route.url.href}>\n            <ArticleSummary blogRoot={blogRoot} route={route} />\n          </li>\n        ))}\n      </ul>\n      {\n        pageCount > 1\n        && (\n        <Pagination\n          blogRoot={blogRoot}\n          pageCount={pageCount}\n          pageNumber={pageNumber}\n        />\n        )\n      }\n      <footer className={styles.footer}>\n        <div>\n          <a\n            href=\"./rss.xml\"\n            target=\"_blank\"\n            style={{ float: 'right' }}\n          >\n            RSS\n          </a>\n          <Link href=\"/about\">\n            About\n          </Link> &bull;{' '}\n          <Link href=\"/travel-map\">\n            Travel Map\n          </Link> &bull;{' '}\n          <Link href=\"/tags\">\n            Tags\n          </Link>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default BlogIndexPage;\n","import React from 'react';\nimport styles from './LoadingIndicator.module.css';\n\nfunction LoadingIndicator({ active, className, style }) {\n  return (\n    <div\n      className={`\n        ${styles.LoadingIndicator}\n        ${active ? styles.active : ''}\n        ${className}\n      `}\n      style={style}\n    />\n  );\n}\n\nexport default LoadingIndicator;\n","import React from 'react';\nimport {\n  View,\n  Link,\n  NotFoundBoundary,\n  useLoadingRoute,\n} from 'react-navi';\nimport siteMetadata from '../siteMetadata';\nimport NotFoundPage from './NotFoundPage';\nimport LoadingIndicator from './LoadingIndicator';\nimport styles from './BlogLayout.module.css';\n\nfunction BlogLayout({ blogRoot, isViewingIndex }) {\n  const loadingRoute = useLoadingRoute();\n\n  return (\n    <div className={styles.container}>\n      <LoadingIndicator active={!!loadingRoute} />\n\n      {// Don't show the header on index pages, as it has a special header.\n      !isViewingIndex && (\n        <header>\n          <h3 className={styles.title}>\n            <Link href={blogRoot}>{siteMetadata.title}</Link>\n          </h3>\n        </header>\n      )}\n\n      <main>\n        <NotFoundBoundary render={() => <NotFoundPage />}>\n          <View />\n        </NotFoundBoundary>\n      </main>\n    </div>\n  );\n}\n\nexport default BlogLayout;\n","import React from 'react';\nimport { View, Link, useCurrentRoute } from 'react-navi';\nimport { MDXProvider } from '@mdx-js/tag';\nimport { DiscussionEmbed } from 'disqus-react';\nimport Helmet from 'react-helmet';\nimport {\n  FacebookShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  RedditShareButton,\n  TelegramShareButton,\n  WhatsappShareButton,\n} from 'react-share';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faFacebookF, faTwitter, faLinkedinIn, faRedditAlien, faWhatsapp, faTelegram,\n} from '@fortawesome/free-brands-svg-icons';\nimport { kebabCase } from 'change-case';\nimport siteMetadata from '../siteMetadata';\nimport ArticleMeta from './ArticleMeta';\nimport Bio from './Bio';\nimport styles from './BlogPostLayout.module.css';\n\nfunction SocialShare(config) {\n  return (\n    <div className={styles.postSocial}>\n      <FacebookShareButton {...config} className={[styles.socialButton, styles.facebook]}>\n        <span className={styles.faIcon}>\n          <FontAwesomeIcon icon={faFacebookF} />\n        </span>\n        <span className={styles.faIconText}>Facebook</span>\n      </FacebookShareButton>\n      <TwitterShareButton {...config} className={[styles.socialButton, styles.twitter]} via=\"smddzcy\">\n        <span className={styles.faIcon}>\n          <FontAwesomeIcon icon={faTwitter} />\n        </span>\n        <span className={styles.faIconText}>Twitter</span>\n      </TwitterShareButton>\n      <LinkedinShareButton {...config} className={[styles.socialButton, styles.linkedin]}>\n        <span className={styles.faIcon}>\n          <FontAwesomeIcon icon={faLinkedinIn} />\n        </span>\n        <span className={styles.faIconText}>LinkedIn</span>\n      </LinkedinShareButton>\n      <RedditShareButton {...config} className={[styles.socialButton, styles.reddit]}>\n        <span className={styles.faIcon}>\n          <FontAwesomeIcon icon={faRedditAlien} />\n        </span>\n        <span className={styles.faIconText}>Reddit</span>\n      </RedditShareButton>\n      <WhatsappShareButton {...config} className={[styles.socialButton, styles.whatsapp]}>\n        <span className={styles.faIcon}>\n          <FontAwesomeIcon icon={faWhatsapp} />\n        </span>\n        <span className={styles.faIconText}>WhatsApp</span>\n      </WhatsappShareButton>\n      <TelegramShareButton {...config} className={[styles.socialButton, styles.telegram]}>\n        <span className={styles.faIcon}>\n          <FontAwesomeIcon icon={faTelegram} />\n        </span>\n        <span className={styles.faIconText}>Telegram</span>\n      </TelegramShareButton>\n    </div>\n  );\n}\n\nfunction BlogPostLayout({ blogRoot }) {\n  const { title, data, url } = useCurrentRoute();\n  const postUrl = `https://smddzcy.com${url.href}`;\n  const disqusConfig = {\n    url: postUrl,\n    identifier: data.slug,\n    title,\n  };\n\n  const imageUrl = 'https://smddzcy.com/post.png';\n\n  return (\n    <View>\n      {({ MDXComponent, readingTime }) => (\n        <article className={styles.container}>\n          <Helmet>\n            <meta property=\"og:locale\" content=\"en_US\" />\n            <meta property=\"og:type\" content=\"article\" />\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={data.spoiler} />\n            <meta property=\"og:url\" content={postUrl} />\n            <meta property=\"og:site_name\" content=\"smddzcy\" />\n            {data.tags.map(tag => (\n              <meta property=\"article:tag\" content={tag} key={tag} />\n            ))}\n            <meta property=\"article:section\" content=\"Blog\" />\n            <meta property=\"article:published_time\" content={data.date.toISOString()} />\n            <meta property=\"article:modified_time\" content={data.date.toISOString()} />\n            <meta property=\"og:updated_time\" content={data.date.toISOString()} />\n            <meta property=\"og:image\" content={imageUrl} />\n            <meta property=\"og:image:secure_url\" content={imageUrl} />\n            <meta name=\"twitter:card\" content=\"summary\" />\n            <meta name=\"twitter:description\" content={data.spoiler} />\n            <meta name=\"twitter:title\" content={title} />\n            <meta name=\"twitter:image\" content={imageUrl} />\n            <meta name=\"twitter:site\" content=\"@smddzcy\" />\n            <meta name=\"twitter:creator\" content=\"@smddzcy\" />\n            <meta name=\"twitter:url\" content={postUrl} />\n            <script type=\"application/ld+json\">{JSON.stringify({\n              '@context': 'https://schema.org',\n              '@type': 'BreadcrumbList',\n              itemListElement: [\n                { '@type': 'ListItem', position: 1, item: { '@id': 'https://smddzcy.com/', name: 'Blog' } },\n                { '@type': 'ListItem', position: 2, item: { '@id': postUrl, name: title } }],\n            })}\n            </script>\n          </Helmet>\n          <header className={styles.header}>\n            <h1 className={styles.title}>\n              <Link href={url.pathname}>{title}</Link>\n            </h1>\n            <ArticleMeta\n              blogRoot={blogRoot}\n              meta={data}\n              readingTime={readingTime}\n            />\n          </header>\n          <MDXProvider components={{\n            a: props => {\n              const newProps = { ...props };\n              if (!props.rel && props.href.includes('http')) {\n                // external link\n                newProps.rel = 'nofollow noopener noreferrer';\n                newProps.target = '_blank';\n              }\n              return <Link {...newProps} />;\n            },\n            wrapper: ({ children }) => (\n              <div className={styles.content}>\n                {children}\n              </div>\n            ),\n          }}\n          >\n            <MDXComponent />\n          </MDXProvider>\n          <SocialShare url={postUrl} title={title} hashtags={data.tags.map(tag => kebabCase(tag))} />\n          <div style={{ marginTop: '1rem' }}>\n            <DiscussionEmbed shortname=\"smddzcy\" config={disqusConfig} />\n          </div>\n          <footer className={styles.footer}>\n            <h3 className={styles.title}>\n              <Link href={blogRoot}>\n                {siteMetadata.title}\n              </Link>\n            </h3>\n            <Bio className={styles.bio} />\n            <section className={styles.links}>\n              {\n                data.previousDetails\n                && (\n                <Link className={styles.previous} href={data.previousDetails.href}>\n                  ← {data.previousDetails.title}\n                </Link>\n                )\n              }\n              {\n                data.nextDetails\n                && (\n                <Link className={styles.next} href={data.nextDetails.href}>\n                  {data.nextDetails.title} →\n                </Link>\n                )\n              }\n            </section>\n          </footer>\n        </article>\n      )\n      }\n    </View>\n  );\n}\n\nexport default BlogPostLayout;\n","import importAll from 'import-all.macro';\nimport * as Navi from 'navi';\nimport { join } from 'path';\nimport { sortBy } from 'lodash';\nimport slugify from 'slugify';\n\n// Get a list of all posts, that will not be loaded until the user\n// requests them.\nconst postModules = importAll.deferred('./**/post.js');\nconst importPost = pathname => postModules[pathname]();\nconst postPathnames = Object.keys(postModules);\nconst datePattern = /^((\\d{1,4})-(\\d{1,4})-(\\d{1,4}))[/-]/;\n\nlet postDetails = postPathnames.map(pathname => {\n  const slug = slugify(\n    pathname.replace(/post.jsx?$/, '').replace(/(\\d)\\/(\\d)/, '$1-$2'),\n  )\n    .replace(/^[-.]+|[.-]+$/g, '')\n    .replace(datePattern, '$1/');\n\n  let date;\n  const dateMatch = slug.match(datePattern);\n  if (dateMatch) {\n    date = new Date(dateMatch[2], parseInt(dateMatch[3], 10) - 1, dateMatch[4]);\n  }\n\n  return {\n    slug,\n    pathname,\n    date,\n  };\n});\n\n// Sort the pages by slug (which contain the dates)\npostDetails = sortBy(postDetails, ['slug']).reverse();\n\n// Create url-friendly slugs from post pathnames, and a `getPage()` function\n// that can be used to load and return the post's Page object.\nconst posts = postDetails.map(({ slug, pathname, date }, i) => ({\n  getPage: Navi.map(async () => {\n    const { default: post } = await importPost(pathname);\n    const { title, getContent, ...meta } = post;\n    let previousSlug; let previousPost; let nextSlug; let\n      nextPost;\n\n    if (i !== 0) {\n      const previousPostDetails = postDetails[i - 1];\n      previousPost = (await importPost(previousPostDetails.pathname)).default;\n      previousSlug = previousPostDetails.slug;\n    }\n\n    if (i + 1 < postDetails.length) {\n      const nextPostDetails = postDetails[i + 1];\n      nextPost = (await importPost(nextPostDetails.pathname)).default;\n      nextSlug = nextPostDetails.slug;\n    }\n\n    return Navi.route({\n      title,\n      getData: (req, context) => ({\n        date,\n        pathname,\n        slug,\n        previousDetails: previousPost && {\n          title: previousPost.title,\n          href: join(context.blogRoot, 'posts', previousSlug),\n        },\n        nextDetails: nextPost && {\n          title: nextPost.title,\n          href: join(context.blogRoot, 'posts', nextSlug),\n        },\n        ...meta,\n      }),\n      getView: async () => {\n        const { default: MDXComponent, ...other } = await getContent();\n        return { MDXComponent, ...other };\n      },\n    });\n  }),\n  slug,\n}));\n\nexport default posts;\n","import {\n  compose, lazy, map, mount, redirect, resolve, route, withContext, withView,\n} from 'navi';\nimport React from 'react';\nimport { join } from 'path';\nimport { chunk, fromPairs } from 'lodash';\nimport BlogIndexPage from '../components/BlogIndexPage';\nimport BlogLayout from '../components/BlogLayout';\nimport BlogPostLayout from '../components/BlogPostLayout';\nimport siteMetadata from '../siteMetadata';\nimport posts from './posts';\n\n// Split the posts into a list of chunks of the given size, and\n// then build index pages for each chunk.\nconst chunks = chunk(posts, siteMetadata.indexPageSize);\nconst chunkPagePairs = chunks.map((chunk, i) => [\n  `/${i + 1}`,\n  map(async (req, context) => {\n    // Don't load anything when just crawling\n    if (req.method === 'HEAD') {\n      return route();\n    }\n\n    // Get metadata for all pages on this page\n    const postRoutes = await Promise.all(\n      chunk.map(async post => {\n        const href = join(context.blogRoot, 'posts', post.slug);\n        const res = await resolve({\n          // If you want to show the page content on the index page, set\n          // this to 'GET' to be able to access it.\n          method: 'HEAD',\n          routes,\n          url: href,\n        });\n        return res;\n      }),\n    );\n\n    // Only add a page number to the page title after the first index page.\n    let pageTitle = siteMetadata.title;\n    if (i > 0) {\n      pageTitle += ` – page ${i + 1}`;\n    }\n\n    return route({\n      title: pageTitle,\n      view: (\n        <BlogIndexPage\n          blogRoot={context.blogRoot}\n          pageNumber={i + 1}\n          pageCount={chunks.length}\n          postRoutes={postRoutes}\n        />\n      ),\n    });\n  }),\n]);\n\nconst routes = compose(\n  withContext((req, context) => ({\n    ...context,\n    blogRoot: req.mountpath || '/',\n  })),\n  withView((req, context) => {\n    // Check if the current page is an index page by comparing the remaining\n    // portion of the URL's pathname with the index page paths.\n    const isViewingIndex = req.path === '/' || /^\\/page\\/\\d+\\/$/.test(req.path);\n\n    // Render the application-wide layout\n    return (\n      <BlogLayout\n        blogRoot={context.blogRoot}\n        isViewingIndex={isViewingIndex}\n      />\n    );\n  }),\n  mount({\n    // The blog's index pages go here. The first index page is mapped to the\n    // root URL, with a redirect from \"/page/1\". Subsequent index pages are\n    // mapped to \"/page/n\".\n    '/': chunkPagePairs.shift()[1],\n    '/page': mount({\n      '/1': redirect((req, context) => context.blogRoot),\n      ...fromPairs(chunkPagePairs),\n    }),\n\n    // Put posts under \"/posts\", so that they can be wrapped with a\n    // \"<BlogPostLayout />\" that configures MDX and adds a post-specific layout.\n    '/posts': compose(\n      withView((req, context) => <BlogPostLayout blogRoot={context.blogRoot} />),\n      mount(fromPairs(posts.map(post => [`/${post.slug}`, post.getPage]))),\n    ),\n\n    // Miscellaneous pages can be added directly to the root switch.\n    // eslint-disable-next-line import/no-cycle\n    '/tags': lazy(() => import('./tags')),\n    '/about': lazy(() => import('./about')),\n    '/travel-map': lazy(() => import('./travel-map')),\n\n    // Only the statically built copy of the RSS feed is intended to be opened,\n    // but the route is defined here so that the static renderer will pick it\n    // up.\n    '/rss': route(),\n\n    '/404': route({\n      title: 'Page not found',\n      view: import('../components/NotFoundPage'),\n    }),\n  }),\n);\n\nexport default routes;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadingIndicator\":\"LoadingIndicator_LoadingIndicator__22gHk\",\"active\":\"LoadingIndicator_active__3mHKP\",\"LoadingIndicator-animation\":\"LoadingIndicator_LoadingIndicator-animation__209JU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BlogLayout_container__3WeFl\",\"title\":\"BlogLayout_title__6OZKV\"};","import React from 'react';\nimport { Link } from 'react-navi';\nimport ArticleMeta from './ArticleMeta';\nimport styles from './ArticleSummary.module.css';\n\nfunction ArticleSummary({ blogRoot, route }) {\n  return (\n    <article className={styles.ArticleSummary}>\n      <h2><Link href={route.url.href}>{route.title}</Link></h2>\n      <ArticleMeta blogRoot={blogRoot} meta={route.data} />\n      <p>{route.data.spoiler}</p>\n    </article>\n  );\n}\n\nexport default ArticleSummary;\n"],"sourceRoot":""}